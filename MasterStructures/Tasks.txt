Hi, this is unrelated to the code itself, just making this to keep track of stuff I've done (marked with //)
and stuff I should be doing! 

Simple Lists:
- Create structure and node //
- Read //
- Print //
- Free memory //
bonuses: insert at the end of the list / make it circular and print it / sort the list (really tough btw) / convert to array


Double Lists:
- Create structure and node //
- Read //
- Print //
- Free memory //
bonuses: same as SL


Hash Tables: 
a) Collision avoidance methods
	- Chaining: Using a list to put multiple elements on the same hash position
	- Re-hashing: Using (a) different hash function(s) if there is a collision 
	- Linear probing: collision? move +1 / -1 until you find a free spot
	- Quadratic probing: collision? move c*((nr it)^2) + or - until you find a free spot
	- Overflow area: Splitting the hash into two, the main storing area and the overflow area where you store collisions and
			in the main area you have a pointer to the position of the collision in the overflow area (or sth like that)
b) 
